-- Lab 3

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all; -- For arithmetic operations on signals

entity lab3_p is
    port (
        i_clock    : in  std_logic;  -- Clock input, 50 MHz
        i_enable   : in  std_logic;  -- Enable signal for the process
        i_switch_1 : in  std_logic;  -- Additional inputs (unused in this example)
        i_switch_2 : in  std_logic;
        o_led      : out std_logic   -- LED output
    );
end lab3_p;

architecture behave of lab3_p is
    -- Define internal variables
    constant crystal_clk : natural := 50000000; -- 50 MHz clock
    signal re_cnt        : natural range 0 to crystal_clk := 0; -- Counter for clock ticks
    signal blinker       : std_logic := '0'; -- LED state signal
begin
    -- Process to toggle the LED based on clock signal
    process (i_clock)
    begin
        if rising_edge(i_clock) then -- Check for rising edge of clock
            if re_cnt < crystal_clk then
                re_cnt <= re_cnt + 1; -- Increment counter
            else
                blinker <= not blinker; -- Toggle LED state
                re_cnt <= 0; -- Reset counter
            end if;
        end if;
    end process;

    -- Connect the internal signal to the output
    o_led <= blinker;
end behave;
